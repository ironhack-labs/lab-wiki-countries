[{"/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/index.js":"1","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/reportWebVitals.js":"2","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/App.js":"3","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/components/Navbar.js":"4","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/components/CountriesList.js":"5","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/components/CountryDetail.js":"6","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/services/BaseService.js":"7"},{"size":430,"mtime":1617183142225,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1616786752127,"results":"10","hashOfConfig":"9"},{"size":1536,"mtime":1617646033580,"results":"11","hashOfConfig":"9"},{"size":345,"mtime":1617192218254,"results":"12","hashOfConfig":"9"},{"size":874,"mtime":1617634134404,"results":"13","hashOfConfig":"9"},{"size":4423,"mtime":1617646445739,"results":"14","hashOfConfig":"9"},{"size":294,"mtime":1617366154496,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"15jenr",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n  ), document.getElementById('root'));\n\n// reportWebVitals();\n",["35","36"],"/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/reportWebVitals.js",[],"/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/App.js",["37"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport CountriesList from './components/CountriesList';\nimport CountryDetail from './components/CountryDetail';\nimport { getCountries } from './services/BaseService';\nimport { Switch, Route } from 'react-router-dom';\n\n\nclass App extends React.Component {\n\n  state = { countries: [] }\n\n  componentDidMount() {\n    console.log('entra')\n    getCountries()\n      .then(allCountries => {\n          this.setState({countries: allCountries})\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar className=\"App-header\"/>\n  \n        <div className=\"container m-0\">\n          <div className=\"row\">\n            <CountriesList countries={this.state.countries}/>\n          \n            <Switch>\n              <Route exact path='/' component={CountriesList} />\n              {/* <Route exact path='/countries/:id' component={CountryDetail}/> */}\n              <Route exact path='/countries/:id' render={(props) => <CountryDetail {...props} countries={this.state.countries}/> } />\n            </Switch>\n          </div>\n        </div>\n  \n        <footer className=\"App-footer sticky-bottom mt-3\">\n          <p>Ironhack Lab developed by <a className=\"App-link\" href='https://github.com/xavirepi' target='_blank'>Javier Repilado</a> using React <img src={logo} className=\"App-logo\" alt=\"logo\" /></p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/components/Navbar.js",[],"/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/components/CountriesList.js",[],"/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/components/CountryDetail.js",["38"],"import React from 'react';\n// import countries from '../countries.json';\nimport { getCountries } from '../services/BaseService';\nimport { Link } from 'react-router-dom'\n\n\n// class CountryDetail extends React.Component {\n\n//     state = { countries: this.props.countries }\n\n//     componentDidMount() {\n//       getCountries()\n//         .then(allCountries => {\n//           this.setState({countries: allCountries})\n//         })\n//         .catch(err => console.log(err))\n      \n//       console.log('componentDidMount')\n//     }\n      \n//     fetchCountry = () => {\n//      getCountries()\n//         .then(allCountries => {\n//             this.setState({countries: allCountries})\n//         })\n//         .catch(err => console.log(err))\n//         console.log('this.state.countries', this.state.countries)\n        \n//       }\n      \n//       render() {\n//         // if (this.state.countries.length > 0) {\n//           const getCountry = (id) => this.state.countries.find(country => country.cca3 === id);\n//           const { params } = this.props.match;\n//           const foundCountry = getCountry(params.id);\n//           console.log('this.props.match.params', this.props.match.params.id)\n//           console.log('this.state.countries', this.state.countries)\n//         //} \n\n//         return(\n//         <div className=\"col-6 ml-3\">\n//           <h1>{ foundCountry.name } <span className=\"ml-2\">{ foundCountry.flag }</span></h1>\n//           <table className=\"table\">\n//             <thead></thead>\n//             <tbody>\n//               <tr>\n//                 <td style={{width: '30%'}}>Capital</td>\n//                 { foundCountry.capital.map((capital, idx) => <td key={foundCountry.cca3}>{capital}</td>)}\n//               </tr>\n//               <tr>\n//                 <td>Area</td>\n//                 <td>\n//                   { foundCountry.area } km\n//                   <sup>2</sup>\n//                 </td>\n//               </tr>\n//               <tr>\n//                 <td>Borders</td>\n//                 <td>\n//                   <ul className='text-left'>\n//                       {\n//                         foundCountry.borders.length > 0\n//                         ?\n//                           foundCountry.borders.map(bordingCountry => <li key={bordingCountry.cca3}><Link style={{listStyle: 'none'}} to={`/countries/${bordingCountry}`}>{bordingCountry}</Link></li>)\n//                         :\n//                         'This country has no Borders'\n//                       }\n//                   </ul>\n//                 </td>\n//               </tr>\n//               <tr>\n//                 <td></td>\n//                 <td>\n//                   <Link to='/'>Hide</Link>\n//                 </td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </div>\n//       )\n//     }\n// }\n\n\nconst CountryDetail = (props) => {\n  console.log('Country')\n\n  const getCountry = (id) => props.countries.find(country => {\n    return country.alpha3Code === id;\n  });\n  const { params } = props.match;\n  const foundCountry = getCountry(params.id);\n\n  if (!foundCountry) return <p>Loading</p>\n\n  return(\n    <div className=\"col-6 ml-3\">\n      <h1>{ foundCountry.name } <span className=\"ml-2\"><img src={foundCountry.flag} height='15rem' className=\"mr-1\" alt={`${foundCountry.name}-flag`}/></span></h1>\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <td style={{width: '30%'}}>Capital</td>\n            <td>{ foundCountry.capital }</td>\n          </tr>\n          <tr>\n            <td>Area</td>\n            <td>\n              { foundCountry.area } km\n              <sup>2</sup>\n            </td>\n          </tr>\n          <tr>\n            <td>Borders</td>\n            <td>\n              <ul className='text-left'>\n                  {\n                    foundCountry.borders.length > 0\n                    ?\n                      foundCountry.borders.map(bordingCountry => <li key={bordingCountry.cca3}><Link style={{listStyle: 'none'}} to={`/countries/${bordingCountry}`}>{bordingCountry}</Link></li>)\n                    :\n                    'This country has no borders'\n                  }\n              </ul>\n            </td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>\n              <Link to='/'>Hide</Link>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n\n}\n\nexport default CountryDetail;","/Users/javier.rlopez/Code/Labs/module-3/lab-wiki-countries/src/services/BaseService.js",[],{"ruleId":"39","severity":1,"message":"40","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":23},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":42,"column":40,"nodeType":"49","messageId":"50","endLine":42,"endColumn":115,"fix":"51"},{"ruleId":"39","severity":1,"message":"52","line":3,"column":10,"nodeType":"41","messageId":"42","endLine":3,"endColumn":22},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"55","text":"56"},"'getCountries' is defined but never used.","no-global-assign","no-unsafe-negation",[1383,1383]," rel=\"noreferrer\""]